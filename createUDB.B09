PROCEDURE createUDB(* Version 01.00.00 *)(* Declarations *)(* Variable Record *)(* Array *)TYPE VREC=vTyp,nTyp:BYTE; nVar:BOOLEAN; vOff,vdOff,dsOff,dmOff,fOff,pOff:INTEGERDIM varRec(400):VREC(* File Record *)TYPE VFP1=vdTkn:BYTE; vdPtr,vdSiz,dsPtr,dsvSiz,dsSiz,dmSiz,fSiz,pSiz,elem1,elem2,elem3,vSRLen:INTEGERTYPE VFP2=vArray:STRING[19]; vName:STRING[29]; vStrLen:STRING[7]; vRecNum,vRefCnt,intReal,pVar:INTEGERTYPE VFP3=mTyp,vLnk,fNum:BYTE; pRec,pFld:BOOLEANTYPE VFRC= vp1:VFP1; vp2:VFP2; vp3:VFP3DIM varFRec:VFRC(* Line Reference Record *)(* Array *)(* TYPE LNREF=hLTyp:BYTE; hLOff:INTEGER(* DIM linRef,linRefs(300):LNREF(* File Record *)TYPE LNREC=lnRecNum,lnRefCnt:INTEGER; lnTyp:BYTE; lnOff:INTEGER; lnNum:STRING[5]DIM linRec:LNREC(* DIM linRec,linRecs(2):LNREC(* DSMap - DSAT Map *)TYPE DSMP=dsOf,dsDm,dsMSz,dsSz:INTEGERDIM DSMap(100):DSMP(* SysCall and Registers *)TYPE REG=cc,a,b,dp:BYTE; x,y,u:INTEGERDIM regs:REGDIM callCode:BYTE(* Path and Other Variables *)DIM oPath:BYTEDIM oOpen,found,hasRecords:BOOLEANDIM loopCnt,varCount,linCount,er:INTEGER(* Variable Reference Counters *)DIM varRefs:INTEGER(* Line Reference Counters *)DIM lineRefs:INTEGER(* Version number, File names *)DIM tVers,version:STRING[8]; dataDir:STRING[16]; oFile:STRING[29]BASE 0(* Records *)FOR loopCnt:=0 TO 399varRec(loopCnt).vTyp:=0 \varRec(loopCnt).nTyp:=0varRec(loopCnt).nVar:=TRUE \varRec(loopCnt).vOff:=0varRec(loopCnt).vdOff:=0 \varRec(loopCnt).dsOff:=0varRec(loopCnt).dmOff:=0 \varRec(loopCnt).fOff:=0varRec(loopCnt).pOff:=0NEXT loopCntvarFRec.vp1.vdTkn:=0 \varFRec.vp1.vdPtr:=0 \varFRec.vp1.vdSiz:=0varFRec.vp1.dsPtr:=0 \varFRec.vp1.dsvSiz:=0 \varFRec.vp1.dsSiz:=0varFRec.vp1.dmSiz:=0 \varFRec.vp1.fSiz:=0 \varFRec.vp1.pSiz:=0varFRec.vp1.elem1:=0 \varFRec.vp1.elem2:=0 \varFRec.vp1.elem3:=0varFRec.vp1.vSRLen:=0 \varFRec.vp2.vArray:=""varFRec.vp2.vName:="" \varFRec.vp2.vStrLen:=""varFRec.vp2.vRecNum:=0 \varFRec.vp2.vRefCnt:=0 \varFRec.vp2.intReal:=0varFRec.vp2.pVar:=0 \varFRec.vp3.mTyp:=0 \varFRec.vp3.vLnk:=0 \varFRec.vp3.fNum:=0varFRec.vp3.pRec:=FALSE \varFRec.vp3.pFld:=FALSElinRec.lnRecNum:=0 \linRec.lnRefCnt:=0 \linRec.lnTyp:=0linRec.lnOff:=0 \linRec.lnNum:=""(* DSMap *)FOR loopCnt:=0 TO 99DSMap(loopCnt).dsOf:=0DSMap(loopCnt).dsDm:=0DSMap(loopCnt).dsMSz:=0DSMap(loopCnt).dsSz:=0NEXT loopCnt(* Version number *)version:="01.00.00"hasRecords:=FALSE(* Variable Reference Counters *)varRefs:=0 \varCount:=0(* Line Reference Counters *)lineRefs:=0 \linCount:=0ON ERROR GOTO 15dataDir:="/DD/DATA/UNPACK/"OPEN #oPath,LEFT$(dataDir,LEN(dataDir)-1):READ+DIRCLOSE #oPath5 oOpen:=FALSEvarCount:=0linCount:=0PRINT "Deleting Old Files"GOSUB 10 \REM delete old files if they existPRINT oFile:=dataDir+"initDB"PRINT "Creating Program Data File: initDB"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,versionPUT #oPath,varFRecPUT #oPath,DSMapCLOSE #oPathoOpen:=FALSEPRINT oFile:=dataDir+"varDefs"PRINT "Creating Variable Reference File: varDefs"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,varCountFOR loopCnt:=1 TO 400PUT #oPath,varFRecNEXT loopCntCLOSE #oPathoOpen:=FALSEPRINT oFile:=dataDir+"linDefs"PRINT "Creating Line Reference File: linDefs"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,linCountFOR loopCnt:=1 TO 300PUT #oPath,linRecNEXT loopCntCLOSE #oPathoOpen:=FALSEPRINT oFile:=dataDir+"procData"PRINT "Creating Procedure Data File: procData"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,hasRecords(* Variables lookup table *)PUT #oPath,varRec(* Variable Reference Counts *)PUT #oPath,varRefs \ PUT #oPath,varCount(* Line Reference Counts *)PUT #oPath,lineRefs \ PUT #oPath,linCountCLOSE #oPathoOpen:=FALSEPRINT PRINT "Finished"END 10 ON ERROR GOTO 11oFile:=dataDir+"initDB"OPEN #oPath,oFile:READGET #oPath,tVersIF tVers<>version THEN  SEEK #oPath,0  (* New, so no changes yet *)ENDIFCLOSE #oPathPRINT "Deleting "; oFileDELETE oFile11 ON ERROR GOTO 12oFile:=dataDir+"varDefs"OPEN #oPath,oFile:WRITECLOSE #oPathPRINT "Deleting "; oFileDELETE oFile12 ON ERROR GOTO 13oFile:=dataDir+"linDefs"OPEN #oPath,oFile:WRITECLOSE #oPathPRINT "Deleting "; oFileDELETE oFile13 ON ERROR GOTO 14oFile:=dataDir+"procData"OPEN #oPath,oFile:WRITECLOSE #oPathPRINT "Deleting "; oFileDELETE oFile14 ON ERROR RETURN 15 er:=ERRIF er=216 THEN SHELL "makdir "+dataDirGOTO 5ELSE PRINT "Error #"; erEND ENDIF 