PROCEDURE createDB(* Version 1.2.10 *)(* Declarations *)(* Variable Record *)(* Array *)TYPE VREC=vTyp,nTyp:BYTE; nVar:BOOLEAN; vOff,vdOff,dsOff,dmOff,fOff,pOff:INTEGERDIM varRec(400):VREC(* File Record *)TYPE VFRC=vdTkn:BYTE; vdPtr,vdSiz,dsPtr,dsvSiz,dsSiz,dmSiz,fSiz,pSiz,elem1,elem2,elem3,vSRLen:INTEGER; vArray:STRING[19]; vName:STRING[29]; vStrLen:STRING[7]; vRecNum,vRefCnt,intReal,pVar:INTEGER; mTyp,vLnk:BYTE; pRec,pFld:BOOLEANDIM varFRec:VFRC(* Line Reference Record *)(* Array *)(* TYPE LNREF=hLTyp:BYTE; hLOff:INTEGER(* DIM linRef,linRefs(300):LNREF(* File Record *)TYPE LNREC=lnRecNum,lnRefCnt:INTEGER; lnTyp:BYTE; lnOff:INTEGER; lnNum:STRING[5]DIM linRec:LNREC(* DIM linRec,linRecs(2):LNREC(* DSMap - DSAT Map *)TYPE DSMP=dsOf,dsDm,dsMSz,dsSz:INTEGERDIM DSMap(100):DSMP(* SysCall and Registers *)TYPE REG=cc,a,b,dp:BYTE; x,y,u:INTEGERDIM regs:REGDIM callCode:BYTE(* Colors *)REM TYPE COLR=white,purple,black,green,yellow,pink,cyan,blue,white2,purple2,black2,green2,yellow2,pink2,cyan2,blue2:BYTETYPE COLR=white,blue,black,green,red,yellow,magenta,cyan,white2,blue2,black2,green2,red2,yellow2,magenta2,cyan2:BYTEDIM color:COLRDIM oPath,token(256),options(26),defFcol,defBcol:BYTEDIM oOpen,displays,found,hasRecords:BOOLEANDIM branchCnt,loopCnt,varCount,linCount,er:INTEGERDIM modSiz,dataSiz,execOff,dsatOff,vdtOff,tpVars,dataStAdd:INTEGERDIM sHour,sMinute,sSecond:INTEGER(* Instruction Counters *)DIM tInstr,t3e,t3f:INTEGER(* Variable Reference Counters *)DIM varRefs,i00,i01,r02,r03,cvas,t46,s47:INTEGERDIM b80,i81,r82,l83,s84,s85,v86,t87,m88,f89,fv8a:INTEGERDIM ft8b,fm8c,sf2,vf3,tf4,mf5,ff6,fvf7,ftf8,fmf9:INTEGER(* External Reference Counters *)DIM r23,k24,c29,o2a,c30,r31,d32,c33,s34:INTEGER(* Line Reference Counters *)DIM lineRefs,lrCnt,rsCnt:INTEGERDIM el11,ew16,el1a,gt20,gs22,lr3b,ig55:INTEGERDIM lits,bLits,iLits,hLits,rLits,sLits:INTEGER(* Version number, File names *)DIM tVers,version:STRING[8]; dataDir,oFile:STRING[29]; screenLn:STRING[79]BASE 0(* Records *)FOR loopCnt:=0 TO 399varRec(loopCnt).vTyp:=0 \varRec(loopCnt).nTyp:=0varRec(loopCnt).nVar:=TRUE \varRec(loopCnt).vOff:=0varRec(loopCnt).vdOff:=0 \varRec(loopCnt).dsOff:=0varRec(loopCnt).dmOff:=0 \varRec(loopCnt).fOff:=0varRec(loopCnt).pOff:=0NEXT loopCntvarFRec.vdTkn:=0 \varFRec.vdPtr:=0 \varFRec.vdSiz:=0varFRec.dsPtr:=0 \varFRec.dsvSiz:=0 \varFRec.dsSiz:=0varFRec.dmSiz:=0 \varFRec.fSiz:=0 \varFRec.pSiz:=0varFRec.elem1:=0 \varFRec.elem2:=0 \varFRec.elem3:=0varFRec.vSRLen:=0 \varFRec.vName:=""varFRec.vArray:="" \varFRec.vStrLen:=""varFRec.vRecNum:=0 \varFRec.vRefCnt:=0 \varFRec.intReal:=0varFRec.pVar:=0 \varFRec.mTyp:=0 \varFRec.vLnk:=0varFRec.pRec:=FALSE \varFRec.pFld:=FALSElinRec.lnRecNum:=0 \linRec.lnRefCnt:=0 \linRec.lnTyp:=0linRec.lnOff:=0 \linRec.lnNum:=""(* DSMap *)FOR loopCnt:=0 TO 99DSMap(loopCnt).dsOf:=0DSMap(loopCnt).dsDm:=0DSMap(loopCnt).dsMSz:=0DSMap(loopCnt).dsSz:=0NEXT loopCnt(* Colors *)color.white=0 \color.blue=1 \color.black=2 \color.green=3 \color.red=4color.yellow=5 \color.magenta=6 \color.cyan=7 \color.white2=8 \color.blue2=9color.black2=10 \color.green2=11 \color.red2=12 \color.yellow2=13color.magenta2=14 \color.cyan2=15(* Counter Array *)found:=FALSE \branchCnt:=1FOR loopCnt:=0 TO 255IF loopCnt=0 OR loopCnt=1 OR loopCnt=2 OR loopCnt=3 OR loopCnt=17 THEN found:=TRUEENDIF IF loopCnt=22 OR loopCnt=26 OR loopCnt=32 OR loopCnt=34 OR loopCnt=35 THEN found:=TRUEENDIF IF loopCnt=59 OR loopCnt=70 OR loopCnt=71 OR loopCnt=85 OR loopCnt=128 THEN found:=TRUEENDIF IF loopCnt=129 OR loopCnt=130 OR loopCnt=131 OR loopCnt=132 THENfound:=TRUEENDIF IF loopCnt=133 OR loopCnt=134 OR loopCnt=135 OR loopCnt=136 THENfound:=TRUEENDIF IF loopCnt=137 OR loopCnt=138 OR loopCnt=139 OR loopCnt=140 THENfound:=TRUEENDIF IF loopCnt=242 OR loopCnt=243 OR loopCnt=244 OR loopCnt=245 THENfound:=TRUEENDIF IF loopCnt=246 OR loopCnt=247 OR loopCnt=248 OR loopCnt=249 THENfound:=TRUEENDIF IF found THEN branchCnt:=branchCnt+1token(loopCnt):=branchCntfound:=FALSEELSE token(loopCnt):=1ENDIF NEXT loopCnt(* Version number *)version:="01.02.10"(* Program Options *)options(0):=1 \REM display options dialog at startupoptions(1):=defFcol \REM main screen foreground coloroptions(2):=defBcol \REM main screen background coloroptions(3):=color.yellow \REM background overlay foreground coloroptions(4):=color.blue \REM background overlay background coloroptions(5):=color.blue \REM foreground overlay foreground coloroptions(6):=color.white \REM foreground overlay background coloroptions(7):=color.black \REM foreground overlay foreground coloroptions(8):=color.white \REM foreground overlay background color(* Window Views *)options(9):=1 \REM view processes(* decode windows *)options(10):=1 \REM view Instruction Decodeoptions(11):=1 \REM view Token Countsoptions(12):=0 \REM view Line Reference List (unnumbered)options(13):=0 \REM view Line Reference List (numbered)(* defVars windows *)options(14):=0 \REM view Variable Reference List (unsorted)options(15):=0 \REM view Variable Reference List (naming)options(16):=0 \REM view Variable Reference List (sorted)options(17):=0 \REM view VDT Validation(* buileSrc windows *)options(18):=0 \REM view DSAT Countoptions(19):=0 \REM view DSAT Validationoptions(20):=1 \REM view Source Output(* File  options*)options(21):=1 \REM create <modulename>Raw.txt fileoptions(22):=1 \REM create <modulename>Lines.txt fileoptions(23):=1 \REM create <modulename>Vars.txt fileoptions(24):=1 \REM create <modulename>VDT.txt fileoptions(25):=1 \REM create <modulename>DSAT.txt filedisplays:=FALSE \hasRecords:=FALSE \sHour:=0 \sMinute:=0 \sSecond:=0 \modSiz:=0dataSiz:=0 \execOff:=0 \dsatOff:=0 \vdtOff:=0 \tpVars:=0 \dataStAdd:=0(* Instruction Counters *)tInstr:=0 \t3e:=0 \t3f:=0(* Variable Reference Counters *)varRefs:=0 \varCount:=0 \i00:=0 \i01:=0 \r02:=0 \r03:=0 \cvas:=0t46:=0 \s47:=0 \b80:=0 \i81:=0 \r82:=0 \l83:=0 \s84:=0 \s85:=0v86:=0 \t87:=0 \m88:=0 \f89:=0 \fv8a:=0 \ft8b:=0 \fm8c:=0 \sf2:=0vf3:=0 \tf4:=0 \mf5:=0 \ff6:=0 \fvf7:=0 \ftf8:=0 \fmf9:=0(* External Reference Counters *)r23:=0 \k24:=0 \c29:=0 \o2a:=0 \c30:=0 \r31:=0 \d32:=0 \c33:=0 \s34:=0(* Line Reference Counters *)lineRefs:=0 \linCount:=0 \lrCnt:=0 \rsCnt:=0 \el11:=0ew16:=0 \el1a:=0 \gt20:=0 \gs22:=0 \lr3b:=0 \ig55:=0(* Literal Reference Counters *)lits:=0 \bLits:=0 \iLits:=0 \hLits:=0 \rLits:=0 \sLits:=0ON ERROR GOTO 15dataDir:="/DD/DATA/"OPEN #oPath,LEFT$(dataDir,LEN(dataDir)-1):READ+DIRCLOSE #oPath5 oOpen:=FALSEvarCount:=0linCount:=0PRINT "Deleting Old Files"GOSUB 10 \REM delete old files if they existPRINT (* Get Window Foreground and Background Colors *)callCode:=$8Dregs.a:=1regs.b:=$96RUN SysCall(callCode,regs)defFcol:=regs.adefBcol:=regs.boFile:=dataDir+"initDB"PRINT "Creating Program Data File: initDB"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,versionPUT #oPath,optionsPUT #oPath,defFcolPUT #oPath,defBcolPUT #oPath,tokenPUT #oPath,colorPUT #oPath,varFRecPUT #oPath,DSMapFOR loopCnt:=1 TO 18READ screenLnPUT #oPath,screenLnNEXT loopCntCLOSE #oPathoOpen:=FALSEPRINT oFile:=dataDir+"varDefs"PRINT "Creating Variable Reference File: varDefs"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,varCountFOR loopCnt:=1 TO 400PUT #oPath,varFRecNEXT loopCntCLOSE #oPathoOpen:=FALSEPRINT oFile:=dataDir+"linDefs"PRINT "Creating Line Reference File: linDefs"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,linCountFOR loopCnt:=1 TO 300PUT #oPath,linRecNEXT loopCntCLOSE #oPathoOpen:=FALSEPRINT oFile:=dataDir+"procData"PRINT "Creating Procedure Data File: procData"; CREATE #oPath,oFile:WRITEoOpen:=TRUEPUT #oPath,displays \ PUT #oPath,hasRecords(* Start Time Variables *)PUT #oPath,sHour \ PUT #oPath,sMinute \ PUT #oPath,sSecond(* Module Offsets and Sizes *)PUT #oPath,modSiz \ PUT #oPath,dataSiz \ PUT #oPath,execOffPUT #oPath,dsatOff \ PUT #oPath,vdtOff \ PUT #oPath,tpVarsPUT #oPath,dataStAdd(* Variables lookup table *)PUT #oPath,varRec(* Instruction Counts *)PUT #oPath,tInstr \ PUT #oPath,t3e \ PUT #oPath,t3f(* Variable Reference Counts *)PUT #oPath,varRefs \ PUT #oPath,varCountPUT #oPath,i00 \ PUT #oPath,i01 \ PUT #oPath,r02 \ PUT #oPath,r03PUT #oPath,t46 \ PUT #oPath,s47 \ PUT #oPath,cvasPUT #oPath,b80 \ PUT #oPath,i81 \ PUT #oPath,r82 \ PUT #oPath,l83PUT #oPath,s84 \ PUT #oPath,s85 \ PUT #oPath,v86 \ PUT #oPath,t87PUT #oPath,m88 \ PUT #oPath,f89 \ PUT #oPath,fv8a \ PUT #oPath,ft8bPUT #oPath,fm8c \ PUT #oPath,sf2 \ PUT #oPath,vf3 \ PUT #oPath,tf4PUT #oPath,mf5 \ PUT #oPath,ff6 \ PUT #oPath,fvf7 \ PUT #oPath,ftf8PUT #oPath,fmf9(* External Reference Counts *)PUT #oPath,r23 \ PUT #oPath,k24 \ PUT #oPath,c29 \ PUT #oPath,o2aPUT #oPath,c30 \ PUT #oPath,r31 \ PUT #oPath,d32 \ PUT #oPath,c33PUT #oPath,s34(* Line Reference Counts *)PUT #oPath,lineRefs \ PUT #oPath,lrCnt \ PUT #oPath,rsCntPUT #oPath,linCount \ PUT #oPath,el11 \ PUT #oPath,ew16PUT #oPath,el1a \ PUT #oPath,gt20 \ PUT #oPath,gs22PUT #oPath,lr3b \ PUT #oPath,ig55(* Literal Reference Counts *)PUT #oPath,lits \ PUT #oPath,bLitsPUT #oPath,iLits \ PUT #oPath,hLits \ PUT #oPath,rLitsPUT #oPath,sLitsCLOSE #oPathoOpen:=FALSEPRINT PRINT "Finished"END 10 ON ERROR GOTO 11oFile:=dataDir+"initDB"OPEN #oPath,oFile:READGET #oPath,tVersIF LEFT$(tVers,3)<>"01." THENSEEK #oPath,0GET #oPath,optionsELSEIF RIGHT$(tVers,2)="10" THENGET #oPath,optionsGET #oPath,defFcolGET #oPath,defBcolENDIFENDIFCLOSE #oPathPRINT "Deleting "; oFileDELETE oFile11 ON ERROR GOTO 12oFile:=dataDir+"varDefs"OPEN #oPath,oFile:WRITECLOSE #oPathPRINT "Deleting "; oFileDELETE oFile12 ON ERROR GOTO 13oFile:=dataDir+"linDefs"OPEN #oPath,oFile:WRITECLOSE #oPathPRINT "Deleting "; oFileDELETE oFile13 ON ERROR GOTO 14oFile:=dataDir+"procData"OPEN #oPath,oFile:WRITECLOSE #oPathPRINT "Deleting "; oFileDELETE oFile14 ON ERROR RETURN 15 er:=ERRIF er=216 THEN SHELL "makdir "+dataDirGOTO 5ELSE PRINT "Error #"; erEND ENDIF DATA "     Project:                                                                  "DATA "  Start time:                                                                  "DATA "                                                                               "DATA " Module Name:                                                                  "DATA "  Sync Bytes:       Execution Addr:       Proc Size:        Proc Status:       "DATA "   Type/Lang:       1st Dt St Addr:       Data Size:        Name Offset:       "DATA "    Attr/Rev:       1st Ex St Addr:        VDT Addr:        Name Length:       "DATA "      Parity:       Proc Link Addr:       DSAT Addr:         Module CRC:       "DATA "                                                Total Program Variables:       "DATA "                                                                               "DATA "                    Valid/    Terminator                                       "DATA "              Total Unique    \      eol       Action                Time      "DATA "Instructions:                                                                  "DATA "   Line Refs:                                                                  "DATA "    Var Refs:                                                                  "DATA "         VDT:                                                                  "DATA "        DSAT:                                                                  "DATA "         DMA:                                                                  "DATA "         DMA:                                                                  "